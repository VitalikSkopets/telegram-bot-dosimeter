---

default:
  image: python:3.10

variables:
  APP: "dosimeter"
  TESTS: "tests/**/*.py"

.retry:
  retry:
    max: 2
    when: runner_system_failure

before_script:
  - curl -sSL https://install.python-poetry.org | python3 -
  - export PATH="/root/.local/bin:$PATH"
  - poetry --version
  - poetry config virtualenvs.create false
  - poetry install -vv

stages:
  - quality
  - typing
  - tests
  - deploy

isort:
  extends: .retry
  stage: quality
  script:
    - echo "Running the Static Analysis stage..."
    - poetry run isort .

ruff:
  extends: .retry
  stage: quality
  script:
    - poetry run ruff ${APP}/*.py

black:
  extends: .retry
  stage: quality
  script:
    - poetry run black .
    - echo "linting done! \(^_^)/"

mypy:
  extends: .retry
  stage: typing
  needs: [isort, black, ruff]
  script:
    - echo "Running the Type checking stage..."
    - poetry run mypy ${APP} ${TESTS}
    - echo "Type checking done! \(^_^)/"

unit-tests:
  extends: .retry
  stage: tests
  needs: [mypy]
  script:
    - echo "Running the Tests stage..."
    - poetry run pytest --cov=${APP} --cov-report=term --cov-report=html
    - echo "Testing done! \(^_^)/"
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    paths:
      - coverage/
    expire_in: 30 days

pages:
  stage: deploy
  needs: [unit-tests]
  script:
    - mv coverage/ public
  artifacts:
    paths:
      - public
    expire_in: 30 days
  only:
    - master

badge:
  stage: deploy
  needs: [unit-tests]
  script:
    - poetry add anybadge
    - >
      poetry run anybadge --label="Last Commit"
      --value="$(date '+%d.%m.%Y %H:%M')"
      --file=last-commit.svg --color=green
    - >
      poetry run anybadge --style=gitlab-scoped
      --label=Telegram --value=Dosimeter
      --file=gitlab_scoped.svg --color=deepskyblue
  artifacts:
    paths:
      - last-commit.svg
      - gitlab_scoped.svg
    when: always
    expire_in: 4 weeks
