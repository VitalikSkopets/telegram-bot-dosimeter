default:
  image: python:3.10

variables:
  APP: "dosimeter"

before_script:
  - pip install --upgrade pip
  - pip install poetry
  - poetry config virtualenvs.create false
  - poetry install

stages:
  - Static Analysis
  - Type checking
  - Tests

isort:
  stage: Static Analysis
  script:
    - echo "Running the Static Analysis stage..."
    - poetry run isort .
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
      changes:
        - ${APP}/**/*.py
  retry:
    max: 2
    when: runner_system_failure

ruff:
  stage: Static Analysis
  script:
    - poetry run ruff ${APP}/*.py
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
      changes:
        - ${APP}/**/*.py
  retry:
    max: 2
    when: runner_system_failure

black:
  stage: Static Analysis
  script:
    - poetry run black .
    - echo "linting done!"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
      changes:
        - ${APP}/**/*.py
  retry:
    max: 2
    when: runner_system_failure

mypy:
  stage: Type checking
  needs: [isort, black, ruff]
  script:
    - echo "Running the Type checking stage..."
    - poetry run mypy .
    - echo "Type checking done!"

unit-tests:
  stage: Tests
  needs: [isort, black, ruff, mypy]
  script:
    - echo "Running the Tests stage..."
    - poetry run pytest --cov=${APP} --cov-report=html
    - echo "Testing done!"
  artifacts:
    expire_in: 1 week
    paths:
      - coverage/
  retry:
    max: 2
    when: runner_system_failure
